/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode constructMaximumBinaryTree(int[] nums) {
        return solve(nums,0,nums.length-1);
    }
    public TreeNode solve(int[]nums,int left,int right)
    {
        if(left>right)  return null;
        if(left==right) return new TreeNode(nums[left]);
        int max = left;
        for(int i=left+1;i<=right;i++)
            if(nums[i]>nums[max])
                max = i;
        TreeNode root = new TreeNode(nums[max]);
        root.left = solve(nums,left,max-1);
        root.right = solve(nums,max+1,right);
        return root;
    }
}
