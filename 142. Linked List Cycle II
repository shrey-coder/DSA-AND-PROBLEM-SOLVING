/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        if(head==null)
        return head;
        ListNode slow=head,fast=head;
        fast=fast.next;
        if(fast!=null)
        fast=fast.next;
        slow=slow.next;
        while(fast!=null && fast!=slow)
        {
            fast=fast.next;
            if(fast!=null)
            fast=fast.next;

            slow=slow.next;
        }
        if(fast==null)
        return null;
        slow = head;
        while(slow!=fast)
        {
            slow=slow.next;
            fast=fast.next;
        }
        return slow;
    }
}
