/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head==null || head.next==null || k==0)
            return head;

        ListNode temp=head,temp1=null;
        int cnt = 0,count=0;
        while(temp!=null)
        {
            cnt++;
            temp=temp.next;
        }

        if(k>=cnt)
        {
            k=k%cnt;
            if(k==0)
            return head;
        }

        temp = head;
        count = cnt-k;
        while(count!=1)
        {
            temp = temp.next;
            count--;
        }

        temp1 = temp.next;
        temp.next = null;
        temp = temp1;
        while(temp1.next!=null)
        {
            temp1=temp1.next;
        }
        temp1.next=head;
        head=temp;
        return head;
    }
}
