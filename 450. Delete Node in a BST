/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode deleteNode(TreeNode root, int key) {
        if(root==null) return null;
        if(root.val==key)
        {
            if(root.left==null && root.right==null)
                return null;
            if(root.left!=null && root.right==null)
                return root.left;
            if(root.right!=null && root.left==null)
                return root.right;
            if(root.left!=null && root.right!=null)
            {
                root.val = min(root.right);
                root.right = deleteNode(root.right,root.val);
            }
            return root;
        }
        if(key>root.val)
        root.right = deleteNode(root.right,key);
        else
        root.left = deleteNode(root.left,key);
        return root;
    }
    public int min(TreeNode root)
    {   
        if(root.left==null) return root.val;
        return min(root.left);
    }
}
