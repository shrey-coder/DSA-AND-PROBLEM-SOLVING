/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void flatten(TreeNode root) {
        if(root==null)
        return;
        root = flat(root);
    }

    public TreeNode flat(TreeNode root)
    {
        if(root.left==null && root.right==null)
        return root;
        TreeNode left=root.left,right=root.right,temp=null;
        root.left=null;
        root.right=null;
        if(left!=null)
        {
        left = flat(left);
        root.right=left;
        temp=left;
        while(temp.right!=null)
        temp=temp.right;
        }
        if(right!=null)
        {
        right = flat(right);
        if(temp!=null)
        temp.right=right;
        else
        root.right=right;
        }
        return root;
    }
}
