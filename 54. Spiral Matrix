class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> al = new ArrayList<Integer>();
        int count =0;
        int row = matrix.length;
        int col = matrix[0].length;
        int startrow = 0;
        int startcol = 0;
        int endrow = row - 1;
        int endcol = col - 1;
        int total = row * col;

        while(count < total)
        {
            for(int i = startcol ;count < total && i <= endcol ;i++)
            {
                al.add(matrix[startrow][i]);
                count++;
            }
            startrow++;

            for(int i = startrow ;count < total && i<=endrow ;i++)
            {
                al.add(matrix[i][endcol]);
                count++;
            }
            endcol--;

            for(int i = endcol ;count < total && i>=startcol ;i--)
            {
                al.add(matrix[endrow][i]);
                count++;
            }
            endrow--;

            for(int i = endrow ;count < total && i>=startrow;i--)
            {
                al.add(matrix[i][startcol]);
                count++;
            }
            startcol++;
        }
        return al;
    }
}
