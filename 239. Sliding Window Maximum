import java.util.*;
class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        if(k==1)
        return nums;
        PriorityQueue<int[]> p=new PriorityQueue<int[]>((a, b) -> b[0]-a[0]);
        int[]ans= new int[nums.length-k+1];
        int j=0;

        for(int i=0;i<k;i++)
        {
            p.offer(new int[]{nums[i],i});
        }
        ans[j]=p.peek()[0];
        j++;
        for(int i=k;i<nums.length;i++)
        {
            p.offer(new int[]{nums[i],i});
            while(p.peek()[1]<=i-k)
                p.poll();
            ans[j]=p.peek()[0];
            j++;
        }
        System.out.println(p);
        return ans;
    }
}
