class Solution {
    boolean[][] visited;
    public boolean exist(char[][] board, String word) {
        visited = new boolean[board.length][board[0].length];
       ArrayList<int[]> pos = new ArrayList<int[]>();
       char s = word.charAt(0);
       for(int i=0;i<board.length;i++)
       {
        for(int j=0;j<board[i].length;j++)
        {
            if(board[i][j]==s)
                pos.add(new int[]{i,j});
        }
       } 
       if(pos.size()==0)
        return false;
       for(int[] t:pos)
       {
        if(solve(board,word,t[0],t[1],0))
            return true;
       } 
       return false;       
    }
    
    private boolean solve(char[][]board,String word,int i,int j,int curr)
    {
        if(i<0 || i>=board.length || j<0 || j>=board[i].length || visited[i][j] || word.charAt(curr)!=board[i][j])
            return false;
        visited[i][j] = true;
        curr++;
        if(curr==word.length())
            return true;
        if(solve(board,word,i+1,j,curr) || solve(board,word,i,j+1,curr) || solve(board,word,i-1,j,curr) || solve(board,word,i,j-1,curr))
            return true;
        visited[i][j] = false;
        return false;
    }
}
