class Solution {
    public int minOperations(int[] nums, int x) {
    int longest = 0,prefixSum =0;          
    HashMap<Integer,Integer> h = new HashMap<>();
    for(int i=0;i<nums.length;i++)
    {
        prefixSum += nums[i];
        h.put(prefixSum,i);
    }
    if(x>prefixSum)return -1;
    if(x==prefixSum)return nums.length;
    h.put(0,0);
    int maxSum = prefixSum - x;
    prefixSum = 0;
    for(int i=0;i<nums.length;i++)
    {
        prefixSum += nums[i];
        int temp = prefixSum - maxSum;
        if(h.containsKey(temp))
        {
            if(temp == 0)
            longest = Math.max(longest,i - h.get(temp)+1);
            else
            longest = Math.max(longest,i-h.get(temp));
        }
    }
    if(longest==0)
        return -1;                                        
    return nums.length - longest;
    }
}
