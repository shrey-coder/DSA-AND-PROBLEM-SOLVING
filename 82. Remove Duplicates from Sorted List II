/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head==null || head.next==null)
        return head;

        HashMap<Integer,Boolean> map = new HashMap<Integer,Boolean>();
        ListNode temp = head;
        while(temp!=null)
        {
            if(!map.containsKey(temp.val))
            map.put(temp.val,false);
            else
            map.replace(temp.val,true);
            temp = temp.next;
        }
        temp = head;
        while(temp.next!=null)
        {
            if(map.get(temp.next.val))
            {
                temp.next=temp.next.next;
            }
            else
            {
                temp=temp.next;
            }
        }
        if(map.get(head.val))
        head=head.next;
        return head;
    }
}
