/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        if(head.next==null)
        return true;

        ListNode slow=head,fast=head.next;
        while(fast!=null && fast.next!=null)
        {
            fast=fast.next.next;
            slow=slow.next;
        }
        slow.next = reverse(slow.next);
        slow=slow.next;
        while(slow!=null)
        {
            if(head.val!=slow.val)
            return false;
            head=head.next;
            slow=slow.next;
        }
        return true;
    }
    public static ListNode reverse(ListNode curr)
    {
        ListNode prev=null,forward=null;
        while(curr!=null)
        {
            forward=curr.next;
            curr.next=prev;
            prev=curr;
            curr=forward;
        }
        return prev;
    }
}
