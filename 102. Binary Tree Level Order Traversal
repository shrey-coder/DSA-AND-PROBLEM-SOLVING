/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 import java.util.*;
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
         
        List<List<Integer>> l = new ArrayList<List<Integer>>();
        if(root==null)
        return l;
        List<Integer> al = new ArrayList<Integer>();
        LinkedList q = new LinkedList();
        q.add(root);
        q.add(null);
        TreeNode temp = null;
        while(!q.isEmpty())
        {
            temp = (TreeNode)q.remove(0);
            if(temp == null)
            {
                l.add(al);
                al = new ArrayList<Integer>();
                if(!q.isEmpty())
                q.add(null);
            }
            else
            {
                al.add(temp.val);
                if(temp.left!=null)
                q.add(temp.left);
                if(temp.right!=null)
                q.add(temp.right);
            }
        }
        return l;
    }
}
