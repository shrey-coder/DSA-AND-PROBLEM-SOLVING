class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int [][]dp = new int[obstacleGrid.length][obstacleGrid[0].length];
        for(int i=0;i<obstacleGrid.length;i++)
        {
            for(int j=0;j<obstacleGrid[0].length;j++)
            dp[i][j]=-1;
        }
        return solve(obstacleGrid,0,0,0,dp);
    }
    public int solve(int[][] arr,int row,int col,int count,int[][]dp)
    {
        if(row>=arr.length || col>=arr[0].length || arr[row][col]==1)
        return 0;
        if(row == arr.length-1 && col== arr[0].length-1)
        {
        count++;
        return count;
        }
        if(dp[row][col]!=-1)
        return dp[row][col];
        int left = solve(arr,row,col+1,count,dp);
        int right = solve(arr,row+1,col,count,dp);
        return dp[row][col] = left+right;
    }
}
