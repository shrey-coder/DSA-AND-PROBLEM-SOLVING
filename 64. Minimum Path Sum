class Solution {
    public int minPathSum(int[][] grid) {
        int [][]dp = new int[grid.length][grid[0].length];
        for(int i=0;i<grid.length;i++)
        for(int j=0;j<grid[0].length;j++)
        dp[i][j] = -1;
        return solve(grid,grid.length-1,grid[0].length-1,0,dp);
    }
    public int solve(int[][] grid,int row,int col,int sum,int [][]dp)
    {
      if(row<0 || col<0)
      return Integer.MAX_VALUE;
      if(row == 0 && col ==0)
      {
        sum+= grid[0][0];
        return sum;
      }
      if(dp[row][col] != -1)
        return dp[row][col];
      int left = solve(grid,row,col-1,sum,dp);
      int up = solve(grid,row-1,col,sum,dp);
      return dp[row][col] = Math.min(left,up)+grid[row][col];
    }
}
