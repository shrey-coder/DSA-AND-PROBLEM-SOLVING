/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode partition(ListNode head, int x) {
        if(head==null || head.next==null)
        return head;
        ListNode head1=null,tail1=null,head2=null,tail2=null;
        
        ListNode curr=head,forward=null;
        while(curr!=null)
        {  
            forward=curr.next;
            if(curr.val<x)
            {
                if(head1==null)
                {
                    head1=curr;
                    tail1=head1;
                }
            else
                {
                    tail1.next=curr;
                    tail1=tail1.next;
                }
            }
            else
            {
                if(head2==null)
                {
                    head2=curr;
                    tail2=head2;
                }
                else
                {
                    tail2.next=curr;
                    tail2=tail2.next;
                }
            }
            curr=forward;
        }
        if(tail1!=null)
        tail1.next=head2;
        if(tail2!=null)
        tail2.next=null;
        if(head1!=null)
        head=head1;
        else
        head=head2;
        return head;

    }

   
}
